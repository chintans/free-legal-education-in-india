---
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import fetchApi from "@lib/strapi";
import type Article from "@interfaces/article";
import rehypeFormat from "rehype-format";
import rehypeStringify from "rehype-stringify";
import remarkDirective from "remark-directive";
import remarkFrontmatter from "remark-frontmatter";
import remarkGfm from "remark-gfm";
import remarkParse from "remark-parse";
import remarkRehype from "remark-rehype";
import { unified } from "unified";

export const prerender = false;

const { slug } = Astro.url.pathname.match(/\/blog\/(?<slug>[^/]+)/)?.groups ?? {
  slug: "",
};

async function fetchPostData(slug) {
  const response = await fetchApi<Article[]>({
    endpoint: "posts",
    query: {
      "filters[slug]": slug,
      populate: "*",
    },
    wrappedByKey: "data",
    wrappedByList: false,
  });
  return response[0];
}

const postData = await fetchPostData(slug);
const processor = unified()
  .use(remarkParse)
  .use(remarkDirective)
  .use(remarkFrontmatter)
  .use(remarkGfm)
  .use(remarkRehype, { allowDangerousHtml: true })
  .use(rehypeFormat)
  .use(rehypeStringify);

const content = String(await processor.process(postData.content));
---

<Layout title={postData.title}>
  <Container>
    <div class="mx-auto max-w-prose mt-14"> {/* Changed max-w-3xl to max-w-prose */}
      <span class="text-blue-500 uppercase tracking-wider text-sm font-medium"> {/* Improved color contrast */}
        {postData.category.Name}
      </span>
      <h1
        class="text-3xl lg:text-4xl font-bold leading-tight mt-2"  {/* Adjusted heading size and spacing */}
      >
        {postData.title}
      </h1>
      <div class="flex gap-3 mt-4 items-center flex-wrap"> {/* Improved spacing and removed unnecessary md:flex-nowrap */}
        <span class="text-gray-600 font-medium"> {/* Improved color contrast */}
          {postData.author.Name}
        </span>
        <span class="text-gray-400">•</span>
        <time class="text-gray-600 font-medium" datetime={postData.publishDate}> {/* Improved color contrast */}
          {new Date(postData.publishDate).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })} {/* Formatted date */}
        </time>
      </div>
      <hr class="my-8 border-gray-200" /> {/* Added a separator line */}
    </div>

    <div class="mx-auto max-w-prose prose prose-lg dark:prose-invert"> {/* Changed max-w-none to max-w-prose and added dark mode support */}
      <div set:html={content} />
    </div>

    <div class="mt-12 text-center">
      <a
        href="/blog"
        class="bg-blue-500 hover:bg-blue-700 text-white font-medium py-3 px-6 rounded-lg transition duration-300 ease-in-out"  {/* Improved button styling */}
        >← Back to Blog</a
      >
    </div>
  </Container>
</Layout>
