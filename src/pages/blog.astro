---
import { Picture } from "astro:assets";
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import Sectionhead from "@components/sectionhead.astro";
import fetchApi from "@lib/strapi";
import type Article from "@interfaces/article";

let publishedBlogEntries: Article[] = [];
const posts = await fetchApi<Article[]>({
  endpoint: "posts",
  query: {
    populate: "*",
  },
  wrappedByList: false,
  wrappedByKey: "data",
});
publishedBlogEntries = posts.filter((x) => x.isPublished);
---




<Layout title="Blog">
  <Container>
    <Sectionhead>
      <Fragment slot="title">Our Blog</Fragment>
      <Fragment slot="desc" class="text-gray-700 dark:text-gray-300">
        We write about building startups and thoughts going on our mind.
      </Fragment>
    </Sectionhead>
    <main class="mt-16">
      <ul class="grid gap-16 max-w-4xl mx-auto">
        {
          publishedBlogEntries.map((blogPostEntry, index) => (
            <li>
              <a href={`/blog/${blogPostEntry.slug}`}>
                <div class="grid md:grid-cols-2 gap-5 md:gap-10 items-center">
                  <Picture
                    src={`${import.meta.env.STRAPI_URL}${blogPostEntry.image.url}`}
                    alt="img"
                    sizes="(max-width: 800px) 100vw, 800px"
                    width={800}
                    height={600}
                    loading={index <= 2 ? "eager" : "lazy"}
                    decoding={index <= 2 ? "sync" : "async"}
                    class="w-full rounded-md object-cover object-center bg-white dark:bg-gray-800"
                  />
                  <div>
                    <span class="text-blue-600 dark:text-blue-400 uppercase tracking-wider text-sm font-medium">
                      {blogPostEntry.category.Name}
                    </span>
                    <h2 class="text-3xl font-semibold leading-snug tracking-tight mt-1 text-gray-900 dark:text-white">
                      {blogPostEntry.title}
                    </h2>
                    <div class="flex gap-2 mt-3">
                      <span class="text-gray-600 dark:text-gray-400">{blogPostEntry.author.Name}</span>
                      <span class="text-gray-400 dark:text-gray-500">â€¢ </span>
                      <time class="text-gray-600 dark:text-gray-400" datetime={blogPostEntry.publishDate}>
                        {blogPostEntry.publishDate}
                      </time>
                    </div>
                  </div>
                </div>
              </a>
            </li>
          ))
        }
      </ul>
    </main>
  </Container>
</Layout>
